<?php

/**
 * BasePropertyPhotos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $listing_id
 * @property string $filename
 * @property Listing $Listing
 * 
 * @method integer        getId()         Returns the current record's "id" value
 * @method integer        getListingId()  Returns the current record's "listing_id" value
 * @method string         getFilename()   Returns the current record's "filename" value
 * @method Listing        getListing()    Returns the current record's "Listing" value
 * @method PropertyPhotos setId()         Sets the current record's "id" value
 * @method PropertyPhotos setListingId()  Sets the current record's "listing_id" value
 * @method PropertyPhotos setFilename()   Sets the current record's "filename" value
 * @method PropertyPhotos setListing()    Sets the current record's "Listing" value
 * 
 * @package    realestate
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePropertyPhotos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('property_photos');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('listing_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('filename', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Listing', array(
             'local' => 'listing_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}