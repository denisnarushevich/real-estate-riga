<?php

/**
 * BaseListing
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property float $price
 * @property integer $city_id
 * @property integer $location_id
 * @property string $street
 * @property boolean $is_house
 * @property integer $area
 * @property integer $land_area
 * @property integer $rooms
 * @property integer $floors
 * @property string $description
 * @property integer $floor
 * @property boolean $is_renovated
 * @property boolean $is_furnished
 * @property boolean $for_rent
 * @property boolean $is_active
 * @property boolean $has_videos
 * @property boolean $month_deal
 * @property integer $num_views
 * @property string $google_map_location
 * @property string $main_photo
 * @property City $City
 * @property Location $Location
 * @property Doctrine_Collection $PropertyPhotos
 * @property Doctrine_Collection $Messages
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method float               getPrice()               Returns the current record's "price" value
 * @method integer             getCityId()              Returns the current record's "city_id" value
 * @method integer             getLocationId()          Returns the current record's "location_id" value
 * @method string              getStreet()              Returns the current record's "street" value
 * @method boolean             getIsHouse()             Returns the current record's "is_house" value
 * @method integer             getArea()                Returns the current record's "area" value
 * @method integer             getLandArea()            Returns the current record's "land_area" value
 * @method integer             getRooms()               Returns the current record's "rooms" value
 * @method integer             getFloors()              Returns the current record's "floors" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method integer             getFloor()               Returns the current record's "floor" value
 * @method boolean             getIsRenovated()         Returns the current record's "is_renovated" value
 * @method boolean             getIsFurnished()         Returns the current record's "is_furnished" value
 * @method boolean             getForRent()             Returns the current record's "for_rent" value
 * @method boolean             getIsActive()            Returns the current record's "is_active" value
 * @method boolean             getHasVideos()           Returns the current record's "has_videos" value
 * @method boolean             getMonthDeal()           Returns the current record's "month_deal" value
 * @method integer             getNumViews()            Returns the current record's "num_views" value
 * @method string              getGoogleMapLocation()   Returns the current record's "google_map_location" value
 * @method string              getMainPhoto()           Returns the current record's "main_photo" value
 * @method City                getCity()                Returns the current record's "City" value
 * @method Location            getLocation()            Returns the current record's "Location" value
 * @method Doctrine_Collection getPropertyPhotos()      Returns the current record's "PropertyPhotos" collection
 * @method Doctrine_Collection getMessages()            Returns the current record's "Messages" collection
 * @method Listing             setId()                  Sets the current record's "id" value
 * @method Listing             setPrice()               Sets the current record's "price" value
 * @method Listing             setCityId()              Sets the current record's "city_id" value
 * @method Listing             setLocationId()          Sets the current record's "location_id" value
 * @method Listing             setStreet()              Sets the current record's "street" value
 * @method Listing             setIsHouse()             Sets the current record's "is_house" value
 * @method Listing             setArea()                Sets the current record's "area" value
 * @method Listing             setLandArea()            Sets the current record's "land_area" value
 * @method Listing             setRooms()               Sets the current record's "rooms" value
 * @method Listing             setFloors()              Sets the current record's "floors" value
 * @method Listing             setDescription()         Sets the current record's "description" value
 * @method Listing             setFloor()               Sets the current record's "floor" value
 * @method Listing             setIsRenovated()         Sets the current record's "is_renovated" value
 * @method Listing             setIsFurnished()         Sets the current record's "is_furnished" value
 * @method Listing             setForRent()             Sets the current record's "for_rent" value
 * @method Listing             setIsActive()            Sets the current record's "is_active" value
 * @method Listing             setHasVideos()           Sets the current record's "has_videos" value
 * @method Listing             setMonthDeal()           Sets the current record's "month_deal" value
 * @method Listing             setNumViews()            Sets the current record's "num_views" value
 * @method Listing             setGoogleMapLocation()   Sets the current record's "google_map_location" value
 * @method Listing             setMainPhoto()           Sets the current record's "main_photo" value
 * @method Listing             setCity()                Sets the current record's "City" value
 * @method Listing             setLocation()            Sets the current record's "Location" value
 * @method Listing             setPropertyPhotos()      Sets the current record's "PropertyPhotos" collection
 * @method Listing             setMessages()            Sets the current record's "Messages" collection
 * 
 * @package    realestate
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseListing extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('listing');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('location_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('street', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('is_house', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('area', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('land_area', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('rooms', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('floors', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('floor', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_renovated', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_furnished', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('for_rent', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('has_videos', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('month_deal', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('num_views', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('google_map_location', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('main_photo', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onDelete' => 'restrict'));

        $this->hasOne('Location', array(
             'local' => 'location_id',
             'foreign' => 'id',
             'onDelete' => 'restrict'));

        $this->hasMany('PropertyPhotos', array(
             'local' => 'id',
             'foreign' => 'listing_id'));

        $this->hasMany('Messages', array(
             'local' => 'id',
             'foreign' => 'listing_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'updated_at',
              'type' => 'timestamp',
             ),
             ));
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'month_deal',
              1 => 'description',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}